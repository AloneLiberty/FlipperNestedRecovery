name: Build and upload to PyPI

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Install Microsoft Visual C++ 2010 Redistributable Package
        if: runner.os == 'Windows'
        run: |
          curl -L -o vcredist.exe https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x64.exe
          Start-Process -FilePath vcredist.exe -ArgumentList '/Q' -Wait -PassThru

      - name: Set up pthreads
        if: runner.os == 'Windows'
        run: |
          curl -O http://sourceware.org/pub/pthreads-win32/pthreads-w32-2-9-1-release.zip
          7z x -y pthreads-w32-2-9-1-release.zip -opthreads
          robocopy pthreads\Pre-built.2\dll\x64 build\pthreads /COPYALL /E || true
          robocopy pthreads\Pre-built.2\include build\pthreads /COPYALL /E || true
          robocopy pthreads\Pre-built.2\lib\x64 build\pthreads /COPYALL /E || true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          CIBW_TEST_SKIP: "*-*linux_{aarch64,ppc64le,s390x} *-macosx_arm64"
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair --add-path build\\pthreads -w {dest_dir} {wheel}"
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-*"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload wheels to PyPi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}